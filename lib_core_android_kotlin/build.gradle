plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
}

android {
    compileSdk defaultCompileSdkVersion
    compileOptions {
        sourceCompatibility javaCompileVersion
        targetCompatibility javaCompileVersion
    }
    kotlinOptions {
        jvmTarget = jvmTarget
    }
    defaultConfig {
        minSdk defaultMinCompileSdkVersion
        targetSdk defaultTargetCompileSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion composeVersion
    }
    packagingOptions {
        resources {
            excludes.add('META-INF/DEPENDENCIES')
            excludes.add('META-INF/LICENSE')
            excludes.add('META-INF/LICENSE.txt')
            excludes.add('META-INF/license.txt')
            excludes.add('META-INF/NOTICE')
            excludes.add('META-INF/NOTICE')
            excludes.add('META-INF/NOTICE.txt')
            excludes.add('META-INF/notice.txt')
            excludes.add('META-INF/ASL2.0')
            excludes.add('META-INF/LGPL2.1')
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }
    sourceSets {
        main {
            def main_layouts = file('src/main/res/layouts').listFiles()
            res {
                srcDirs 'src/main/res', main_layouts
            }
            java {
                srcDirs 'src/main/kotlin'
                filter.exclude '**/*TODO*'
            }
        }
        debug {
            res {
                srcDirs 'src/build_type/debug/res'
            }
            java {
                srcDirs 'src/build_type/debug/kotlin'
            }
        }
        release {
            res {
                srcDirs 'src/build_type/release/res'
            }
            java {
                srcDirs 'src/build_type/release/kotlin'
            }
        }
    }
    namespace 'com.tezov.lib_core_android_kotlin'
}

dependencies {
    api project(':lib_core_kotlin')

    api dependencies_lib.core.reflection
    api dependencies_lib.core.appcompat
    api dependencies_lib.core.material

    api dependencies_lib.core.viewmodel
    api dependencies_lib.core.viewmodel_saved_state

    api dependencies_lib.core.lifecycle_runtime
    api dependencies_lib.core.lifecycle_extensions
    api dependencies_lib.core.lifecycle_livedata

    api dependencies_lib.compose.ui
    api dependencies_lib.compose.runtime
    api dependencies_lib.compose.material
    api dependencies_lib.compose.foundation
    api dependencies_lib.compose.accompanist_pager_indicators
    api dependencies_lib.compose.animation
    api dependencies_lib.compose.activity
    api dependencies_lib.compose.constraintlayout
    api dependencies_lib.compose.viewmodel
    api dependencies_lib.compose.livedata
    api dependencies_lib.compose.navigation
    api dependencies_lib.compose.navigation_accompanist
    api dependencies_lib.compose.ui_util

    implementation dependencies_lib.lib.dagger
    kapt dependencies_lib.lib.dagger_kapt

    implementation dependencies_lib.lib.webkit


}